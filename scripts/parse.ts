import {ethers} from "ethers";

(async () => {
  const iface = new ethers.utils.Interface(
      ['function validateTransactionProofV1(uint16 _srcChainId, address _dstAddress, uint _gasLimit, bytes32 _blockHash, bytes32 _data, bytes calldata _transactionProof) external']
  );
  const parsed = iface.decodeFunctionData('validateTransactionProofV1','0x252f7b01000000000000000000000000000000000000000000000000000000000000277a00000000000000000000000045a60d56dba3f356d15e69e3a33eb315b99329b60000000000000000000000000000000000000000000000000000000000030d40c27b4219b9f8acf367b422f52613ccb198bb048d7cbbcf9472a6459c68539cb2773b2fe808069b6308e32bc12c474119d568e5557f2ea10ff0832431fb6b460300000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000006a000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000053f851a0d059e63f7e386a0121ed56155a44238d16f43276a1e786f778608ceaf04b572680808080808080a0a2eefb09287d1c240be951f356ff9fc9858af927c457b1765edcf6915eded8758080808080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000539f9053631b9053202f9052e01830446a6bf90423f89b94ab1fb7d540d76505f6c22c6f3a60fddce8c93daff863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000960d4df56d76cc4c88b655871f64d474a2712d55a0000000000000000000000000a94b108478d93644db5acd862b65dae943e018eaa000000000000000000000000000000000000000000000000010a741a462780000f85894a30444b26c171b27c6b3698544490affa2e12119e1a0df21c415b78ed2552cc9971249e32a053abce6087a0ae0fbf3f78db5174a3493a000000000000000000000000000000000000000000000000000f59657e0c40b27f8d994fddaffa49e71da3ef0419a303a6888f94bb5ba18e1a0b0c632f55f1e1b3b2c3d82f41ee4716bb4c00f0f5d84cdafc141581bb8757a4fb8a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002200010000000000000000000000000000000000000000000000000000000000030d40000000000000000000000000000000000000000000000000000000000000f8d99492cfdb3789693c2ae7225fcc2c263de94d630be4e1a04e41ee13e03cd5e0446487b524fdc48af6acf26c074dacdbdfb6b574b42c8146b8a0000000000000000000000000000000000000000000000000000000000000279f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000006000000000000000000000000a94b108478d93644db5acd862b65dae943e018ea00000000000000000000000000000000000000000000000001847fb92bd4351cf8f994fddaffa49e71da3ef0419a303a6888f94bb5ba18e1a0e9bded5f24a4168e4f3bf44e00298c993b22376aad8c58c7dda9718a54cbea82b8c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000740000000000000001277aa94b108478d93644db5acd862b65dae943e018ea279f45a60d56dba3f356d15e69e3a33eb315b99329b6000000000000000000000000960d4df56d76cc4c88b655871f64d474a2712d5500000000000000000000000000000000000000000000000010a741a462780000000000000000000000000000f87994a94b108478d93644db5acd862b65dae943e018eae1a0e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109cb840000000000000000000000000960d4df56d76cc4c88b655871f64d474a2712d5500000000000000000000000000000000000000000000000010a741a46278000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001')

  console.log(`chainId : ${parsed[0]}`)
  console.log(`address : ${parsed[1]}`)
  console.log(`gasLimit : ${parsed[2]}`)
  console.log(`blockHash : ${parsed[3]}`)
  console.log(`data : ${parsed[4]}`)
  console.log(`txProof : ${parsed[5]}`)
})()
